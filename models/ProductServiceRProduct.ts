/**
 * Kiler API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ProductServiceRProductPrice } from '../models/ProductServiceRProductPrice';
import { HttpFile } from '../http/http';

export class ProductServiceRProduct {
    'id'?: number;
    'name'?: string | null;
    'description'?: string | null;
    'brandName'?: string | null;
    'maxQuantity'?: number;
    'minQuantity'?: number;
    'quantityStep'?: number;
    'initalQuantity'?: number;
    'prices'?: Array<ProductServiceRProductPrice> | null;
    'eId'?: string | null;
    'barcode'?: string | null;
    'unitId'?: number | null;
    'unitName'?: string | null;
    'active'?: boolean;
    'menuName'?: string | null;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "brandName",
            "baseName": "brandName",
            "type": "string",
            "format": ""
        },
        {
            "name": "maxQuantity",
            "baseName": "maxQuantity",
            "type": "number",
            "format": "double"
        },
        {
            "name": "minQuantity",
            "baseName": "minQuantity",
            "type": "number",
            "format": "double"
        },
        {
            "name": "quantityStep",
            "baseName": "quantityStep",
            "type": "number",
            "format": "double"
        },
        {
            "name": "initalQuantity",
            "baseName": "initalQuantity",
            "type": "number",
            "format": "double"
        },
        {
            "name": "prices",
            "baseName": "prices",
            "type": "Array<ProductServiceRProductPrice>",
            "format": ""
        },
        {
            "name": "eId",
            "baseName": "eId",
            "type": "string",
            "format": ""
        },
        {
            "name": "barcode",
            "baseName": "barcode",
            "type": "string",
            "format": ""
        },
        {
            "name": "unitId",
            "baseName": "unitId",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "unitName",
            "baseName": "unitName",
            "type": "string",
            "format": ""
        },
        {
            "name": "active",
            "baseName": "active",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "menuName",
            "baseName": "menuName",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ProductServiceRProduct.attributeTypeMap;
    }

    public constructor() {
    }
}

