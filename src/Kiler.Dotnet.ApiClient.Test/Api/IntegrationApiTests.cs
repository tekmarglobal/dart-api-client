/*
 * Kiler API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Kiler.Dotnet.ApiClient.Client;
using Kiler.Dotnet.ApiClient.Api;

namespace Kiler.Dotnet.ApiClient.Test.Api
{
    /// <summary>
    ///  Class for testing IntegrationApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class IntegrationApiTests : IDisposable
    {
        private IntegrationApi instance;

        public IntegrationApiTests()
        {
            instance = new IntegrationApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of IntegrationApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' IntegrationApi
            //Assert.IsType<IntegrationApi>(instance);
        }

        /// <summary>
        /// Test ApiIntegrationMarketyoCategoriesImportFromApiPost
        /// </summary>
        [Fact]
        public void ApiIntegrationMarketyoCategoriesImportFromApiPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ApiIntegrationMarketyoCategoriesImportFromApiPost();
            //Assert.IsType<string>(response);
        }

        /// <summary>
        /// Test ApiIntegrationMarketyoCustomersImportFromApiPost
        /// </summary>
        [Fact]
        public void ApiIntegrationMarketyoCustomersImportFromApiPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? importBannedUser = null;
            //int? minimumOrderCount = null;
            //double? minimumOrderAmount = null;
            //var response = instance.ApiIntegrationMarketyoCustomersImportFromApiPost(importBannedUser, minimumOrderCount, minimumOrderAmount);
            //Assert.IsType<string>(response);
        }

        /// <summary>
        /// Test ApiIntegrationMarketyoProductCategoriesImportFromApiPost
        /// </summary>
        [Fact]
        public void ApiIntegrationMarketyoProductCategoriesImportFromApiPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ApiIntegrationMarketyoProductCategoriesImportFromApiPost();
            //Assert.IsType<string>(response);
        }

        /// <summary>
        /// Test ApiIntegrationMarketyoProductImportFromApiPost
        /// </summary>
        [Fact]
        public void ApiIntegrationMarketyoProductImportFromApiPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ApiIntegrationMarketyoProductImportFromApiPost();
            //Assert.IsType<string>(response);
        }

        /// <summary>
        /// Test ApiIntegrationTestGet
        /// </summary>
        [Fact]
        public void ApiIntegrationTestGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? delaySeconds = null;
            //var response = instance.ApiIntegrationTestGet(delaySeconds);
            //Assert.IsType<string>(response);
        }

        /// <summary>
        /// Test ApiIntegrationUpdateProductFromOlimposGet
        /// </summary>
        [Fact]
        public void ApiIntegrationUpdateProductFromOlimposGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string regionErpId = null;
            //string productErpId = null;
            //bool? log = null;
            //var response = instance.ApiIntegrationUpdateProductFromOlimposGet(regionErpId, productErpId, log);
            //Assert.IsType<string>(response);
        }

        /// <summary>
        /// Test ApiIntegrationUpdateProductFromOlimposPost
        /// </summary>
        [Fact]
        public void ApiIntegrationUpdateProductFromOlimposPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string regionErpId = null;
            //string productErpId = null;
            //bool? log = null;
            //var response = instance.ApiIntegrationUpdateProductFromOlimposPost(regionErpId, productErpId, log);
            //Assert.IsType<string>(response);
        }
    }
}
