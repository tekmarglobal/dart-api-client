/*
 * Kiler API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Kiler.Dotnet.ApiClient.Client;
using Kiler.Dotnet.ApiClient.Api;
// uncomment below to import models
//using Kiler.Dotnet.ApiClient.Model;

namespace Kiler.Dotnet.ApiClient.Test.Api
{
    /// <summary>
    ///  Class for testing CartApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CartApiTests : IDisposable
    {
        private CartApi instance;

        public CartApiTests()
        {
            instance = new CartApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CartApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' CartApi
            //Assert.IsType<CartApi>(instance);
        }

        /// <summary>
        /// Test ApiCartAddCampaignByCodePost
        /// </summary>
        [Fact]
        public void ApiCartAddCampaignByCodePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string campaignCode = null;
            //var response = instance.ApiCartAddCampaignByCodePost(campaignCode);
            //Assert.IsType<RestResultOfListOfCartServiceCampaignResponse>(response);
        }

        /// <summary>
        /// Test ApiCartApplyCampaignPost
        /// </summary>
        [Fact]
        public void ApiCartApplyCampaignPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? campaignId = null;
            //var response = instance.ApiCartApplyCampaignPost(campaignId);
            //Assert.IsType<RestResultOfCartServiceCampaignApplyResponse>(response);
        }

        /// <summary>
        /// Test ApiCartCreateCartPost
        /// </summary>
        [Fact]
        public void ApiCartCreateCartPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CartServiceCreateCartRequest body = null;
            //var response = instance.ApiCartCreateCartPost(body);
            //Assert.IsType<RestResultOfCartServiceCreateCartResponse>(response);
        }

        /// <summary>
        /// Test ApiCartDeleteCardDelete
        /// </summary>
        [Fact]
        public void ApiCartDeleteCardDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ApiCartDeleteCardDelete();
            //Assert.IsType<RestResultOfCartServiceCartResponse>(response);
        }

        /// <summary>
        /// Test ApiCartDeleteCartDelete
        /// </summary>
        [Fact]
        public void ApiCartDeleteCartDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ApiCartDeleteCartDelete();
            //Assert.IsType<RestResultOfCartServiceCartResponse>(response);
        }

        /// <summary>
        /// Test ApiCartGetCampaignsGet
        /// </summary>
        [Fact]
        public void ApiCartGetCampaignsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ApiCartGetCampaignsGet();
            //Assert.IsType<RestResultOfListOfCartServiceCampaignResponse>(response);
        }

        /// <summary>
        /// Test ApiCartGetTimeSlotsPost
        /// </summary>
        [Fact]
        public void ApiCartGetTimeSlotsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ApiCartGetTimeSlotsPost();
            //Assert.IsType<RestResultOfListOfCartServiceTimeSlotsResponse>(response);
        }

        /// <summary>
        /// Test ApiCartPost
        /// </summary>
        [Fact]
        public void ApiCartPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ApiCartPost();
            //Assert.IsType<RestResultOfCartServiceCartResponse>(response);
        }

        /// <summary>
        /// Test ApiCartUpdateCartPost
        /// </summary>
        [Fact]
        public void ApiCartUpdateCartPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CartServiceUpdateCartRequest body = null;
            //var response = instance.ApiCartUpdateCartPost(body);
            //Assert.IsType<RestResultOfCartServiceCartResponse>(response);
        }

        /// <summary>
        /// Test ApiCartUpdateCartRegionPost
        /// </summary>
        [Fact]
        public void ApiCartUpdateCartRegionPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CartServiceUpdateCartRegionRequest body = null;
            //var response = instance.ApiCartUpdateCartRegionPost(body);
            //Assert.IsType<RestResultOfCartServiceUpdateCartRegionResponse>(response);
        }

        /// <summary>
        /// Test ApiCartUpdateTimeslotPost
        /// </summary>
        [Fact]
        public void ApiCartUpdateTimeslotPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CartServiceUpdateTimeslotRequest body = null;
            //var response = instance.ApiCartUpdateTimeslotPost(body);
            //Assert.IsType<RestResultOfCartServiceCartResponse>(response);
        }
    }
}
