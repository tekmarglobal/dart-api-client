/*
 * Kiler API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Kiler.Dotnet.ApiClient.Client.OpenAPIDateConverter;

namespace Kiler.Dotnet.ApiClient.Model
{
    /// <summary>
    /// PaymentServiceSodexoPaymentRequest
    /// </summary>
    [DataContract(Name = "PaymentServiceSodexoPaymentRequest")]
    public partial class PaymentServiceSodexoPaymentRequest : IEquatable<PaymentServiceSodexoPaymentRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PaymentServiceSodexoPaymentRequest" /> class.
        /// </summary>
        /// <param name="gsmNumber">gsmNumber.</param>
        /// <param name="otpCode">otpCode.</param>
        /// <param name="amount">amount.</param>
        /// <param name="transactionUid">transactionUid.</param>
        public PaymentServiceSodexoPaymentRequest(string gsmNumber = default(string), string otpCode = default(string), double amount = default(double), string transactionUid = default(string))
        {
            this.GsmNumber = gsmNumber;
            this.OtpCode = otpCode;
            this.Amount = amount;
            this.TransactionUid = transactionUid;
        }

        /// <summary>
        /// Gets or Sets GsmNumber
        /// </summary>
        [DataMember(Name = "gsmNumber", EmitDefaultValue = true)]
        public string GsmNumber { get; set; }

        /// <summary>
        /// Gets or Sets OtpCode
        /// </summary>
        [DataMember(Name = "otpCode", EmitDefaultValue = true)]
        public string OtpCode { get; set; }

        /// <summary>
        /// Gets or Sets Amount
        /// </summary>
        [DataMember(Name = "amount", EmitDefaultValue = false)]
        public double Amount { get; set; }

        /// <summary>
        /// Gets or Sets TransactionUid
        /// </summary>
        [DataMember(Name = "transactionUid", EmitDefaultValue = true)]
        public string TransactionUid { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PaymentServiceSodexoPaymentRequest {\n");
            sb.Append("  GsmNumber: ").Append(GsmNumber).Append("\n");
            sb.Append("  OtpCode: ").Append(OtpCode).Append("\n");
            sb.Append("  Amount: ").Append(Amount).Append("\n");
            sb.Append("  TransactionUid: ").Append(TransactionUid).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PaymentServiceSodexoPaymentRequest);
        }

        /// <summary>
        /// Returns true if PaymentServiceSodexoPaymentRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of PaymentServiceSodexoPaymentRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PaymentServiceSodexoPaymentRequest input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.GsmNumber == input.GsmNumber ||
                    (this.GsmNumber != null &&
                    this.GsmNumber.Equals(input.GsmNumber))
                ) && 
                (
                    this.OtpCode == input.OtpCode ||
                    (this.OtpCode != null &&
                    this.OtpCode.Equals(input.OtpCode))
                ) && 
                (
                    this.Amount == input.Amount ||
                    this.Amount.Equals(input.Amount)
                ) && 
                (
                    this.TransactionUid == input.TransactionUid ||
                    (this.TransactionUid != null &&
                    this.TransactionUid.Equals(input.TransactionUid))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.GsmNumber != null)
                {
                    hashCode = (hashCode * 59) + this.GsmNumber.GetHashCode();
                }
                if (this.OtpCode != null)
                {
                    hashCode = (hashCode * 59) + this.OtpCode.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.Amount.GetHashCode();
                if (this.TransactionUid != null)
                {
                    hashCode = (hashCode * 59) + this.TransactionUid.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
