/*
 * Kiler API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Kiler.Dotnet.ApiClient.Client.OpenAPIDateConverter;

namespace Kiler.Dotnet.ApiClient.Model
{
    /// <summary>
    /// CustomerServiceNewCustomerDefaultAddress
    /// </summary>
    [DataContract(Name = "CustomerServiceNewCustomerDefaultAddress")]
    public partial class CustomerServiceNewCustomerDefaultAddress : IEquatable<CustomerServiceNewCustomerDefaultAddress>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomerServiceNewCustomerDefaultAddress" /> class.
        /// </summary>
        /// <param name="defultAddress">defultAddress.</param>
        /// <param name="invoiceAddress">invoiceAddress.</param>
        public CustomerServiceNewCustomerDefaultAddress(int defultAddress = default(int), int invoiceAddress = default(int))
        {
            this.DefultAddress = defultAddress;
            this.InvoiceAddress = invoiceAddress;
        }

        /// <summary>
        /// Gets or Sets DefultAddress
        /// </summary>
        [DataMember(Name = "defultAddress", EmitDefaultValue = false)]
        public int DefultAddress { get; set; }

        /// <summary>
        /// Gets or Sets InvoiceAddress
        /// </summary>
        [DataMember(Name = "invoiceAddress", EmitDefaultValue = false)]
        public int InvoiceAddress { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CustomerServiceNewCustomerDefaultAddress {\n");
            sb.Append("  DefultAddress: ").Append(DefultAddress).Append("\n");
            sb.Append("  InvoiceAddress: ").Append(InvoiceAddress).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CustomerServiceNewCustomerDefaultAddress);
        }

        /// <summary>
        /// Returns true if CustomerServiceNewCustomerDefaultAddress instances are equal
        /// </summary>
        /// <param name="input">Instance of CustomerServiceNewCustomerDefaultAddress to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CustomerServiceNewCustomerDefaultAddress input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.DefultAddress == input.DefultAddress ||
                    this.DefultAddress.Equals(input.DefultAddress)
                ) && 
                (
                    this.InvoiceAddress == input.InvoiceAddress ||
                    this.InvoiceAddress.Equals(input.InvoiceAddress)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.DefultAddress.GetHashCode();
                hashCode = (hashCode * 59) + this.InvoiceAddress.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
